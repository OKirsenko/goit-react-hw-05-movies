{"version":3,"file":"static/js/698.55a6840f.chunk.js","mappings":"+NACA,EAA4B,oCAA5B,EAAsE,8BAAtE,EAA8G,kCAA9G,EAAsJ,8BAAtJ,EAA4L,gCAA5L,EAAqO,iCAArO,EAA8Q,gCAA9Q,EAAqT,+BAArT,EAA2V,+BAA3V,EAAuY,kE,mBCSjYA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,iCAClBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,iCAEZ,SAASE,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAQC,EAAAA,EAAAA,MAARD,IACFE,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAS,QAASV,GACfW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,KAAKP,KACP,CAACJ,IAQJ,OACE,iBAAKc,UAAWC,EAAhB,WACE,mBAAQD,UAAWC,EAAOC,QAAST,EAAQU,OAA3C,qBAGCd,IACC,4BACE,iBAAKW,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXG,IAfLf,EAAMgB,YAGL,kCAAN,OAAyChB,EAAMgB,aAFtC,oDAeCC,IAAKjB,EAAMkB,MAAQlB,EAAMkB,MAAQlB,EAAMmB,QAEzC,iBAAKR,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,UACGZ,EAAMkB,MAAQlB,EAAMkB,MAAQlB,EAAMmB,KADrC,KAEGnB,EAAMoB,aAAaC,MAAM,EAAG,GAF/B,QAIA,eAAGV,UAAWC,EAAd,yBAAoCZ,EAAMsB,eAC1C,eAAIX,UAAWC,EAAf,uBACA,cAAGD,UAAWC,EAAd,SAAwBZ,EAAMuB,YAC9B,eAAIZ,UAAWC,EAAf,qBACA,cAAGD,UAAWC,EAAd,SACGZ,EAAMwB,OAAOC,KAAI,SAAAC,GAAK,gBAAOA,EAAMP,KAAb,iBAI7B,eAAIR,UAAWC,EAAf,qCACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CACEe,gBAAiBf,EACjBD,UAAWC,EACXgB,GAAE,UAAK1B,EAAL,SAHJ,qBAQF,yBACE,SAAC,KAAD,CACEyB,gBAAiBf,EACjBD,UAAWC,EACXgB,GAAE,UAAK1B,EAAL,YAHJ,8BAWR,UAAC,EAAA2B,SAAD,CAAUC,UAAU,uCAApB,WACE,SAAC,KAAD,CAAOC,KAAK,wBAAZ,UACE,SAACtC,EAAD,OAEF,SAAC,KAAD,CAAOsC,KAAK,2BAAZ,UACE,SAACpC,EAAD,c,4ECrFJqC,EAAM,mCACG,SAASzB,EAAS0B,EAAQC,GACvC,MAAe,aAAXD,EACKE,IAAAA,IAAA,kEACsDH,IAGhD,UAAXC,EACKE,IAAAA,IAAA,6CACiCD,EADjC,oBACkDF,IAG5C,WAAXC,EACKE,IAAAA,IAAA,4DACgDH,EADhD,kBAC6DE,IAGvD,SAAXD,EACKE,IAAAA,IAAA,6CACiCD,EADjC,4BAC0DF,EAD1D,oBAIM,WAAXC,EACKE,IAAAA,IAAA,6CACiCD,EADjC,4BAC0DF,EAD1D,yBADT","sources":["webpack://react-homework-template/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.js","services/fetchTrending.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetailsPage_container__VyXai\",\"btn\":\"MovieDetailsPage_btn__oGTxV\",\"wrapper\":\"MovieDetailsPage_wrapper__3wAUt\",\"img\":\"MovieDetailsPage_img__jzc+4\",\"right\":\"MovieDetailsPage_right__+R0z4\",\"header\":\"MovieDetailsPage_header__IMlk0\",\"descr\":\"MovieDetailsPage_descr__oE9Cz\",\"list\":\"MovieDetailsPage_list__div34\",\"link\":\"MovieDetailsPage_link__ZE1Eo\",\"activeLink\":\"MovieDetailsPage_activeLink__ukBb5 MovieDetailsPage_link__ZE1Eo\"};","import {\n  NavLink,\n  Route,\n  useParams,\n  useHistory,\n  useRouteMatch,\n} from 'react-router-dom';\nimport { useState, useEffect, lazy, Suspense } from 'react';\nimport s from './MovieDetailsPage.module.css';\nimport fetchAPI from 'services/fetchTrending';\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchAPI('movie', movieId)\n      .then(res => res.data)\n      .then(setMovie);\n  }, [movieId]);\n\n  const imgUrl = () => {\n    if (!movie.poster_path) {\n      return 'http://placehold.it/300x400/808080&text=No_poster';\n    }\n    return `https://image.tmdb.org/t/p/w400${movie.poster_path}`;\n  };\n  return (\n    <div className={s.container}>\n      <button className={s.btn} onClick={history.goBack}>\n        Go back\n      </button>\n      {movie && (\n        <div>\n          <div className={s.wrapper}>\n            <img\n              className={s.img}\n              src={imgUrl()}\n              alt={movie.title ? movie.title : movie.name}\n            />\n            <div className={s.right}>\n              <h1 className={s.header}>\n                {movie.title ? movie.title : movie.name} (\n                {movie.release_date.slice(0, 4)})\n              </h1>\n              <p className={s.descr}>Popularity: {movie.popularity}</p>\n              <h2 className={s.header}>Overview</h2>\n              <p className={s.descr}>{movie.overview}</p>\n              <h2 className={s.header}>Genres</h2>\n              <p className={s.descr}>\n                {movie.genres.map(genre => `${genre.name} `)}\n              </p>\n            </div>\n          </div>\n          <h2 className={s.header}>Auditional information</h2>\n          <ul className={s.list}>\n            <li>\n              <NavLink\n                activeClassName={s.activeLink}\n                className={s.link}\n                to={`${url}/cast`}\n              >\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                activeClassName={s.activeLink}\n                className={s.link}\n                to={`${url}/reviews`}\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      )}\n      <Suspense fallback={<h1>loading...</h1>}>\n        <Route path=\"/movies/:movieId/cast\">\n          <Cast />\n        </Route>\n        <Route path=\"/movies/:movieId/reviews\">\n          <Reviews />\n        </Route>\n      </Suspense>\n    </div>\n  );\n}\n","import axios from 'axios';\nconst key = '72b81a8bb303f29cc8e049d7d5cd52a0';\nexport default function fetchAPI(action, param) {\n  if (action === 'trending') {\n    return axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}`\n    );\n  }\n  if (action === 'movie') {\n    return axios.get(\n      `https://api.themoviedb.org/3/movie/${param}?api_key=${key}`\n    );\n  }\n  if (action === 'search') {\n    return axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${param}`\n    );\n  }\n  if (action === 'cast') {\n    return axios.get(\n      `https://api.themoviedb.org/3/movie/${param}/credits?api_key=${key}&language=en-US`\n    );\n  }\n  if (action === 'review') {\n    return axios.get(\n      `https://api.themoviedb.org/3/movie/${param}/reviews?api_key=${key}&language=en-US`\n    );\n  }\n}\n"],"names":["Cast","lazy","Reviews","MovieDetailsPage","movieId","useParams","useState","movie","setMovie","url","useRouteMatch","history","useHistory","useEffect","fetchAPI","then","res","data","className","s","onClick","goBack","src","poster_path","alt","title","name","release_date","slice","popularity","overview","genres","map","genre","activeClassName","to","Suspense","fallback","path","key","action","param","axios"],"sourceRoot":""}